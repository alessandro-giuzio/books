---
import {getCollection, type CollectionEntry } from 'astro:content'

type Props = {
	position: number,
	concorrente: CollectionEntry<'concorrenti'>,

}
/* const tuttiConcorrenti = await getCollection('concorrenti'); */
const tuttiConcorrenti = await getCollection('concorrenti');
const {concorrente, position} = Astro.props
const topThree = tuttiConcorrenti.sort((a, b) => (b.data.punti) - a.data.punti).slice(0, 3);

// Rearrange the order: [Second Place, First Place, Third Place]
const reordered = [topThree[1], topThree[0], topThree[2]];

import {Image} from 'astro:assets';





---
<div class="instructions rounded-xl">

  <div class="">

		<Image src={concorrente.data.image} alt="proto" class="rounded-full border-[6px] border-[#FBF0FF] object-cover aspect-square max-w-[90px]" width={124}  format='webp'/>

			<div class="avatar relative -top-4 left-5">
				<div class="w-8 rounded-full border-2 border-[#FBF0FF] bg-[#fbf0ff]">
					<p class=" mx-auto flex items-center justify-center text-electricAmethyst font-semibold">
						{concorrente.data.punti}
					</p>
				</div>
			</div>
	</div>
  <div class="flex flex-col gap-1 items-center">
    <p class="name">{concorrente.data.nome}</p>
    <p class="punti">{concorrente.data.punti}</p>
    <p class="nickname">{concorrente.data.username}</p>
  </div>
</div>

<style>
  .instructions {
		margin-bottom: 2rem;
		/* border: 1px solid rgba(var(--accent-light), 25%); */
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		margin-inline:auto;
		display: flex;
		flex-direction: column;
	  width: 100%;
		max-width:max-content;


	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
</style>