---
import { getCollection, type CollectionEntry } from 'astro:content';

type Props = {
  position: number;
  concorrente: CollectionEntry<'concorrenti'>;
};
/* const tuttiConcorrenti = await getCollection('concorrenti'); */
const tuttiConcorrenti = await getCollection('concorrenti');
const { concorrente, position } = Astro.props;
const topThree = tuttiConcorrenti
  .sort((a, b) => b.data.punti - a.data.punti)
  .slice(0, 3);

// Rearrange the order: [Second Place, First Place, Third Place]
const reordered = [topThree[1], topThree[0], topThree[2]];

import { Image } from 'astro:assets';
---

<script></script>

<div class='instructions rounded-3xl'>
  <div class=''>
    <Image
      src={concorrente.data.image}
      alt='proto'
      class={`rounded-full border-[10px] ${
        position === 1
          ? 'border-borderSilver'
          : position === 2
            ? 'border-borderGolden'
            : 'border-borderBronze'
      } object-cover aspect-square max-w-[120px] -translate-y-20`}
      width={124}
      format='webp'
    />

    <div class='avatar relative -top-[110px] left-10'>
      <div
        class={`w-[42px] rounded-lg rotate-45 h-[42px] grid place-content-center mx-auto  ${
          position === 1
            ? 'border-borderSilver bg-borderSilver'
            : position === 2
              ? 'border-borderGolden bg-borderGolden'
              : position === 3
                ? 'border-borderBronze bg-borderBronze'
                : 'border-[#FBF0FF]'
        } bg-[#fbf0ff]`}
      >
        <p
          class='mx-auto text-3xl flex items-center justify-center text-electricAmethyst font-semibold'
        >
          {
            position === 1 ? (
              <span class='text-3xl -rotate-45'>ðŸ¥ˆ</span>
            ) : position === 2 ? (
              <span class='text-3xl -rotate-45'>ðŸ¥‡</span>
            ) : position === 3 ? (
              <span class='text-3xl -rotate-45'>ðŸ¥‰</span>
            ) : (
              position
            )
          }
        </p>
      </div>
    </div>
  </div>
  <div class='flex flex-col gap-2 items-center text-3xl pb-4'>
    <p class='name'>{concorrente.data.nome}</p>
    <p class='punti'>{concorrente.data.punti}</p>
    <p class='nickname'>{concorrente.data.username}</p>
  </div>
</div>

<style>
  .instructions {
    margin-bottom: 4rem;
    margin-top: 6rem;
    /* border: 1px solid rgba (var(--accent-light), 25%); */
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    margin-inline: auto;
    display: flex;

    align-items: center;
    flex-direction: column;
    width: 100%;
    max-width: 10rem;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
</style>
