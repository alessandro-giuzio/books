---
import { getCollection } from 'astro:content';
const libros = await getCollection('libros25');

// fetch all the tags
const tags = libros.map(libro => libro.data.tags).flat();
// Create a frequency map for the tags
const tagCounts = tags.reduce((acc: { [key: string]: number }, tag: string) => {
  acc[tag] = (acc[tag] || 0) + 1; // Increment the count for each tag
  return acc;
}, {});

// sort tags by count
const sortedTags = Object.entries(tagCounts).sort((a, b) => b[1] - a[1]);

// get top 6 tags
const topTags = sortedTags.slice(0, 6);

// get unique tags
const uniqueTags = [...new Set(tags)];

// Shuffle and pick top 4 tags
const shuffledTags = Object.entries(tagCounts)
  .sort(() => Math.random() - 0.5)
  .slice(0, 6); // Randomly pick 6
// Tag-to-icon mapping
const tagIcons = {
  fiction: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/></svg>`,
  mystery: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 10l-7 7-7-7"/></svg>`,
  adventure: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h11m4 4H9"/></svg>`,
  fantasy: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l-4 4m0 0l-4-4m4 4V4"/></svg>`,
  sciFi: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/></svg>`,
};

// Default icon for tags not in the mapping
const defaultIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h11m4 4H9"/></svg>`;
---

<div
  class='bg-gradient-to-tr from-pink-100 to-pink-200 p-4 sm:p-6 rounded-lg shadow-md md:col-span-2 hover:scale-105 transition-transform'>
  <h4 class='text-gray-700 text-lg sm:text-xl font-medium text-center mb-4'>
    Genero Kuttunak ðŸŽ‰ - Zure gogokoenak!
  </h4>
  <div>
    <ul
      role='list'
      class='mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4'>
      {
        shuffledTags.map(([tag, count], index) => (
          <li class='col-span-1 flex rounded-md shadow-sm '>
            <div
              class={`flex w-16 shrink-0 items-center justify-center rounded-l-md ${
                index % 4 === 0
                  ? 'bg-pink-600'
                  : index % 4 === 1
                    ? 'bg-purple-600'
                    : index % 4 === 2
                      ? 'bg-yellow-500'
                      : 'bg-green-500'
              } text-sm font-medium text-white`}>
              {tag.charAt(0).toUpperCase()}
            </div>
            <div class='flex flex-1 items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white'>
              <div class='flex-1 truncate px-4 py-2 text-sm'>
                <span class='font-medium text-gray-900 hover:text-gray-600'>
                  {tag}
                </span>
                <p class='text-gray-500'>{count} Liburua</p>
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</div>
