---
import { getCollection, type CollectionEntry } from 'astro:content';
type Props = {
  libro: CollectionEntry<'libros'>;
};
/* const todosLosLibros = await getCollection('libros');
const tuttiIconcorrenti = await getCollection('concorrenti'); */

const { libro } = Astro.props;
---

<div class='book relative'>
  <span
    class='absolute -top-4 font-mono text-md -rotate-[15deg] p-2 bg-[var(--bg) text-[var(--text)]] rounded-full border border-[var(--text)]'
    >{libro.data.punti}</span
  >
  <img
    loading='lazy'
    width='180'
    height='270'
    src={libro.data.cover}
    alt={libro.data.alt}
  />
  <div class='info'>
    <h3 class='title font-mono'>{libro.data.title}</h3>
    <p class='font-mono'>{libro.data.author}</p>

    <div x-data='{ open: false }' class=''>
      <button
        @click='open = ! open'
        class='border mb-2 px-3 py-1 rounded-lg text-xs font-mono'
        >Sinopsis</button
      >
      <template x-if='open'>
        <div>
          <p class='font-mono'>{libro.data.body}</p>
        </div>
      </template>
    </div>

    <ul>
      {
        libro.data.tag.map(tag => (
          <li class='font-mono'>
            {tag.charAt(0).toUpperCase() + tag.slice(1)}
          </li>
        ))
      }
    </ul>
    <p class='concorrente font-mono'>{libro.data.concorrente}</p>
    <!-- <p class='tag'>{book.daa.yearRead}</p> -->
  </div>
</div>

<style>
  ul {
    list-style-type: none; /* Removes the default list bullet */
    padding: 0; /* Removes the default padding */
    margin: 0; /* Removes the default margin */
    display: flex; /* Display list items inline */
    flex-wrap: wrap; /* Allow list items to wrap in the container */
  }

  ul li {
    background-color: var(--bg-card); /* Light grey background */
    border: 1px solid var(--text); /* Light grey border */
    border-radius: 8px; /* Rounded corners */
    padding: 5px 10px; /* Padding inside each tag */
    margin-right: 10px; /* Space between tags horizontally */
    margin-bottom: 10px; /* Space between tags vertically */
    cursor: pointer; /* Change cursor to pointer on hover */
    transition: background-color 0.3s; /* Smooth transition for background color */
  }

  ul li:hover {
    background-color: #ddd; /* Darker shade on hover */
  }
  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .book {
    /* box-shadow:
      rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset,
      rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset,
      rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset,
      rgba(0, 0, 0, 0.06) 0px 2px 1px,
      rgba(0, 0, 0, 0.09) 0px 4px 2px,
      rgba(0, 0, 0, 0.09) 0px 8px 4px,
      rgba(0, 0, 0, 0.09) 0px 16px 8px,
      rgba(0, 0, 0, 0.09) 0px 32px 16px; */
    padding: 0.25rem;
  }
  .book .info {
    margin-top: 1em;
  }

  button {
    border: 1px solid var(--text);
    font-weight: 700;
    text-transform: uppercase;
    overflow: hidden;
    position: relative;
  }

  button::before {
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(120deg, transparent, var(--text), transparent);
    transform: translateX(-100%);
    transition: 0.6s;
    position: absolute;
  }
  button:hover {
    background: transparent;
    box-shadow: 0 0 20px 5px var(--text);
  }

  .book p {
    color: var(--text);
  }

  .info p.concorrente {
    color: red;
    font-size: 1.25em;
    text-transform: uppercase;
  }

  /* ul {
    list-style: none;
    padding: 0;
    margin: 0.5rem 0;
  }

  ul li {
    display: block;
    margin-right: 0.5em;
    color: var(--text);
    font-size: 1rem;
  } */
</style>
