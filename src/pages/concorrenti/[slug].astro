---
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const concorrenti = await getCollection('concorrenti');
  const libros = await getCollection('libros');
  // filtrer the libros by concorrente
  console.log('concorrenti:', concorrenti);
  const paths = concorrenti.map(concorrente => ({
    params: { slug: concorrente.slug },
    props: { concorrente },
  }));

  console.log('Generated paths:', paths);
  console.log('libros:', libros.length);

  return paths;
}
export async function get({ params }) {
  const concorrenti = await getCollection('concorrenti');
  const concorrente = concorrenti.find(c => c.slug === params.slug);

  if (!concorrente) {
    return {
      status: 404,
      body: 'Not Found',
    };
  }

  return {
    props: { concorrente },
  };
}

// Define the props type
type Props = {
  concorrente: CollectionEntry<'concorrenti'>;
  libro: CollectionEntry<'libros'>[];
};
const { concorrente } = Astro.props;
---

<!-- show the slug -->
<article class='concorrente-details'>
  <h1>{concorrente.data.nome}</h1>
  <!-- <img src={concorrente.data.image} alt={concorrente.data.nome} width='200' />
  <p>{concorrente.data.description}</p> -->
  <p>Punti: {concorrente.data.punti}</p>
</article>
