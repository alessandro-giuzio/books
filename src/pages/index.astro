---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Header from '../components/Header.astro';
import Leader from '../components/Leader.astro';
import NotLeader from '../components/NotLeader.astro';
import { getCollection } from 'astro:content';
const tuttiConcorrenti = await getCollection('concorrenti');
// Sort by points in descending order
const topThree = tuttiConcorrenti
  .sort((a, b) => b.data.punti - a.data.punti)
  .slice(0, 3);
// Rearrange the order: [Second Place, First Place, Third Place]
const reordered = [topThree[1], topThree[0], topThree[2]];
---

<Layout title='Irakurketa 2024'>
  <main class='relative'>
    <Header />
    <!-- <div class='box text-red-600'></div> -->
    <div class='grid grid-cols-3 h-full gap-x-1 mt-12'>
      {
        reordered.map((concorrente, index) => (
          <div
            class={`${
              index === 1
                ? 'translate-y-[-62px] transition duration-900 h-[calc(100%+30px)]'
                : ''
            }`}
          >
            <Leader concorrente={concorrente} position={index + 1} />
          </div>
        ))
      }
    </div>
    <!-- <div class='box text-red-600'></div> -->
    <!--   <div class='box text-red-600'></div> -->
    <div class='sec'>
      {
        tuttiConcorrenti
          .map((concorrente, index) => (
            <NotLeader concorrente={concorrente} position={index + 1} />
          ))
          .slice(3, 8)
      }
    </div>
  </main>
</Layout>

<style>
  main {
    margin: 0 auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 0.5rem);
    color: var(--text);
    background-color: var(--bg);
    font-size: 20px;
    line-height: 1.6;
  }

  .box {
    width: 180px;
    height: 80vh;
    position: absolute;

    border-radius: 400px;
    background-image: linear-gradient(
      50deg,
      hsl(274deg 100% 25%) 0%,
      hsl(297deg 100% 29%) 13%,
      hsl(319deg 100% 34%) 24%,
      hsl(342deg 100% 39%) 34%,
      hsl(4deg 100% 43%) 43%,
      hsl(26deg 100% 48%) 52%,
      hsl(30deg 100% 50%) 60%,
      hsl(15deg 100% 50%) 68%,
      hsl(1deg 100% 50%) 76%,
      hsl(346deg 100% 51%) 84%,
      hsl(331deg 100% 51%) 91%,
      hsl(316deg 100% 51%) 100%
    );
    filter: blur(100px);
    z-index: -1;
  }
  .sec {
    margin-top: 2rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    padding: 0;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
